name: Build & Run Dockerfile

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU (pour multi-arch, optionnel ici)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHRC_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v6

        with:
          context: .
          file: Dockerfile
          load: true
          tags: ci-test:latest
          cache-from: type=gha,ref=${{github.ref}}
          cache-to: type=gha,ref=${{github.ref}},mode=max
          github-token: ${{ secrets.GHRC_TOKEN }}
      - name: Inspect image size
        id: inspect
        env:
          IMAGE_NAME: ci-test

        run: |
          SIZE=$(docker image inspect ${{ env.IMAGE_NAME }}:latest --format='{{.Size}}')
          echo "image_size_bytes=$SIZE" >> $GITHUB_OUTPUT

      - name: Log image size
        run: echo "Docker image size = ${{ steps.inspect.outputs.image_size_bytes }} bytes"

      - name: Scan image for vulnerabilities (Trivy)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: image
          image-ref: ${{ env.IMAGE_NAME }}:latest
          format: sarif
          output: trivy-report.sarif

      - name: Upload Trivy SARIF report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-report.sarif
      - name: Run container
        run: |
          docker run --rm ci-test:latest

  # analyze:
  #   name: Analyze Workflow Performance
  #   runs-on: ubuntu-latest
  #   needs: build-and-run
  #   steps:
  #     - name: Analyze workflow performance
  #       uses: actions-ecosystem/action-analyzer @v1
